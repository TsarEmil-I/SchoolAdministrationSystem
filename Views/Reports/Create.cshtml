@model ReportDTO
@{
    ViewData["Title"] = "Справки";
}

<h1 class="text-2xl font-semibold mb-6">Генериране на справка</h1>

<div class="max-w-lg mx-auto bg-white p-6 rounded-lg shadow-md">
    
    <h4 class="text-lg font-semibold mb-4">Изберете параметри</h4>
    <hr class="mb-6" />

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="text-red-600 font-bold mb-4">
            @TempData["ErrorMessage"]
        </div>
    }

    <form asp-action="Create" class="space-y-6" method="post">
        <div asp-validation-summary="All" class="text-red-600 font-bold mb-4"></div>

        <div class="form-group">
            <label asp-for="ReportType" class="block font-medium text-gray-700">Тип на справката</label>
            <select asp-for="ReportType" id="reportType" class="form-control block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="" selected disabled>Изберете тип</option>
                <option value="student">На ученик</option>
                <option value="class">На клас</option>
                <option value="classPeriod">На клас - период</option>
            </select>
            <span asp-validation-for="ReportType" class="text-red-600 font-bold"></span>
        </div>

        <div id="classField" class="hidden">
            <label asp-for="ClassId" class="block font-medium text-gray-700">Клас</label>
            <select asp-for="ClassId" id="classId" class="form-control block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500" asp-items="ViewBag.Classes">
                <option value="" selected disabled>Изберете клас</option>
            </select>
            <span asp-validation-for="ClassId" class="text-red-600 font-bold"></span>
        </div>

        <div id="studentField" class="hidden">
            <label asp-for="StudentId" class="block font-medium text-gray-700">Ученик</label>
            <select asp-for="StudentId" id="studentId" class="form-control block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="" selected disabled>Изберете ученик</option>
            </select>
            <span asp-validation-for="StudentId" class="text-red-600 font-bold"></span>
        </div>

        <div id="periodFields" class="hidden">
            <div class="form-group">
                <label asp-for="StartDate" class="block font-medium text-gray-700">Начална дата</label>
                <input asp-for="StartDate" type="date" class="form-control block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                <span asp-validation-for="StartDate" class="text-red-600 font-bold"></span>
            </div>

            <div class="form-group">
                <label asp-for="EndDate" class="block font-medium text-gray-700">Крайна дата</label>
                <input asp-for="EndDate" type="date" class="form-control block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                <span asp-validation-for="EndDate" class="text-red-600 font-bold"></span>
            </div>
        </div>

        <div class="flex justify-center">
            <button type="submit" class="bg-red-500 hover:bg-red-600 font-bold text-white py-2 px-6 rounded-md focus:outline-none focus:ring-2 focus:ring-red-400">
                Извлечи справка
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const reportTypeDropdown = document.getElementById("reportType");
            const classField = document.getElementById("classField");
            const studentField = document.getElementById("studentField");
            const periodFields = document.getElementById("periodFields");

            reportTypeDropdown.addEventListener("change", function () {
                const selectedType = this.value;

                // Hide all fields initially
                classField.classList.add("hidden");
                studentField.classList.add("hidden");
                periodFields.classList.add("hidden");

                // Show relevant fields based on report type
                if (selectedType === "student") {
                    classField.classList.remove("hidden");
                    studentField.classList.add("hidden");
                } else if (selectedType === "class") {
                    classField.classList.remove("hidden");
                } else if (selectedType === "classPeriod") {
                    classField.classList.remove("hidden");
                    periodFields.classList.remove("hidden");
                }
            });

            document.getElementById("classId").addEventListener("change", async function () {
                const classId = this.value;
                const studentDropdown = document.getElementById("studentId");

                if (classId && reportTypeDropdown.value === "student") {
                    const response = await fetch(`/Students/List?id=${classId}`);
                    const students = await response.json();

                    studentDropdown.innerHTML = '<option value="" selected disabled>Изберете ученик</option>';
                    students.forEach(student => {
                        const option = document.createElement("option");
                        option.value = student.id;
                        option.textContent = student.fullName;
                        studentDropdown.appendChild(option);
                    });

                    studentField.classList.remove("hidden");
                } else {
                    studentField.classList.add("hidden");
                }
            });
        });
    </script>
}